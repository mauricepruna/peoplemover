{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MapController",
        "models": [
            "MapLocations"
        ],
        "requires": [
            "Ext.util.DelayedTask"
        ],
        "stores": [
            "MapStore"
        ],
        "views": [
            "MyMap"
        ]
    },
    "name": "MyController1",
    "designerId": "76e0b36e-f4f4-4306-b070-9d57900fe5a7",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mapComponent",
                "selector": "#mymap"
            },
            "name": "mapComponent",
            "designerId": "ca4a43b7-5d38-4e1f-8f44-5d7f13618085"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mymap",
                "designer|targetType": "MyMap",
                "fn": "onMymapMaprender",
                "implHandler": [
                    "  var store, latLng, marker, midNorth, midSouth, highNorth, highSouth, i;",
                    "        ",
                    "        var iconBase = 'resources/images/';",
                    "        var gMap = this.getMapComponent();",
                    "        var map = Ext.getCmp('mymap').getMap();",
                    "        var midSouthWayPoints = new Array();",
                    "        var midNorthWayPoints = new Array();",
                    "        var highSouthWayPoints = new Array();",
                    "        var highNorthWayPoints = new Array();",
                    "",
                    "                // Get store for Middle South WayPoints",
                    "",
                    "                waypointMidSouth = Ext.getStore('WayPointStore1');",
                    "                waypointMidSouth.load();",
                    "",
                    "                waypointMidSouth.each(function(record,index,length){",
                    "",
                    "                    var x = 0;",
                    "",
                    "                   while(x < record.data.listwp.length){",
                    "                        var temp = new google.maps.LatLng(record.get('listwp')[x].latitude, record.get('listwp')[x].longitude); ",
                    "                        midSouthWayPoints.push(temp);",
                    "                        x++;",
                    "                    }",
                    "",
                    "                });",
                    "                var pathMS = new google.maps.Polyline({",
                    "                    path: midSouthWayPoints,",
                    "                    strokeColor: '#f08616',",
                    "                    strokeOpacity: 1.0,",
                    "                    strokeWeight: 5",
                    "                });",
                    "               pathMS.setMap(map);",
                    "",
                    "               midSouthWayPoints = [];",
                    "",
                    "",
                    "            // Get Store for Middle North WayPoints",
                    "                waypointMidNorth = Ext.getStore('WayPointStore2');",
                    "                waypointMidNorth.load();",
                    "",
                    "                waypointMidNorth.each(function(record,index,length){",
                    "",
                    "                    var x = 0;",
                    "",
                    "                   while(x < record.data.listwp.length){",
                    "                        var temp = new google.maps.LatLng(record.get('listwp')[x].latitude, record.get('listwp')[x].longitude); ",
                    "                        midNorthWayPoints.push(temp);",
                    "                        x++;",
                    "                    }",
                    "",
                    "                });",
                    "                var pathMN = new google.maps.Polyline({",
                    "                    path: midNorthWayPoints,",
                    "                    strokeColor: '#f08616',",
                    "                    strokeOpacity: 1.0,",
                    "                    strokeWeight: 5",
                    "                });",
                    "               pathMN.setMap(map);",
                    "",
                    "               midNorthWayPoints = [];",
                    "",
                    "",
                    "               //Get Store for High South WayPoints",
                    "",
                    "                waypointHighSouth = Ext.getStore('WayPointStore3');",
                    "                waypointHighSouth.load();",
                    "",
                    "                waypointHighSouth.each(function(record,index,length){",
                    "",
                    "                    var x = 0;",
                    "",
                    "                   while(x < record.data.listwp.length){",
                    "                        var temp = new google.maps.LatLng(record.get('listwp')[x].latitude, record.get('listwp')[x].longitude); ",
                    "                        highSouthWayPoints.push(temp);",
                    "                        // console.log(record.get('listwp')[x].latitude+','+ record.get('listwp')[x].longitude);",
                    "                        x++;",
                    "                    }",
                    "",
                    "                });",
                    "                var pathHS = new google.maps.Polyline({",
                    "                    path: highSouthWayPoints,",
                    "                    strokeColor: '#40c5e6',",
                    "                    strokeOpacity: 0.65,",
                    "                    strokeWeight: 5",
                    "                });",
                    "               pathHS.setMap(map);",
                    "",
                    "               highSouthWayPoints = [];",
                    "",
                    "",
                    "",
                    "                //Get Store for High South WayPoints",
                    "",
                    "                waypointHighNorth = Ext.getStore('WayPointStore4');",
                    "                waypointHighNorth.load();",
                    "",
                    "                waypointHighNorth.each(function(record,index,length){",
                    "",
                    "                    var x = 0;",
                    "",
                    "                   while(x < record.data.listwp.length){",
                    "                        var temp = new google.maps.LatLng(record.get('listwp')[x].latitude, record.get('listwp')[x].longitude); ",
                    "                        highNorthWayPoints.push(temp);",
                    "                        //console.log(record.get('listwp')[x].latitude+','+ record.get('listwp')[x].longitude);",
                    "                        x++;",
                    "                    }",
                    "",
                    "                });",
                    "                var pathHN = new google.maps.Polyline({",
                    "                    path: highNorthWayPoints,",
                    "                    strokeColor: '#40c5e6',",
                    "                    strokeOpacity: 0.65,",
                    "                    strokeWeight: 5",
                    "                });",
                    "               pathHN.setMap(map);",
                    "",
                    "               highNorthWayPoints = [];",
                    "",
                    "",
                    "                store = Ext.getStore('MapStore');",
                    "                store.load();",
                    "",
                    "                trolleys = [];",
                    "",
                    "",
                    "                //get store for the stops",
                    "                midSouth = Ext.getStore('MiddleSouthStore');",
                    "                midNorth = Ext.getStore('MiddleNorthStore');",
                    "                highSouth = Ext.getStore('HighSouthStore');",
                    "                highNorth = Ext.getStore('HighNorthStore');",
                    "                midSouth.load();",
                    "                midNorth.load();",
                    "                highSouth.load();",
                    "                highNorth.load();",
                    "",
                    "",
                    "                // shows the stops for High School South Route",
                    "                highSouth.each(function(record,index,length) {",
                    "",
                    "                    var x = new google.maps.LatLng(record.data.latitude, record.data.longitude);",
                    "",
                    "                    marker = new google.maps.Marker({",
                    "                        position: x,",
                    "                        animation: google.maps.Animation.DROP,",
                    "                        draggable: false,",
                    "                        title: record.data.street,",
                    "                        icon: iconBase + 'bus.png'",
                    "                    });",
                    "",
                    "                                (function(i, marker) {",
                    "                                    // Creating the event listener. It now has access to the values of",
                    "                                    // i and marker as they were during its creation",
                    "                                    google.maps.event.addListener(marker, 'click', function() {",
                    "                                        var infowindow = new google.maps.InfoWindow({",
                    "                                            content: ''+ marker.getTitle() + '<br/>Scheduled Time ' + record.data.scheduledTime//new google.maps.LatLng(block3[0],block3[1])",
                    "                                        });",
                    "                                        infowindow.open(map, marker);",
                    "                                    });",
                    "                                    })(i, marker);",
                    "",
                    "                    marker.setMap(map);",
                    "",
                    "                });",
                    "",
                    "                // shows the stops for High School North Route",
                    "                highNorth.each(function(record,index,length) {",
                    "",
                    "                    var x = new google.maps.LatLng(record.data.latitude, record.data.longitude);",
                    "",
                    "                    marker = new google.maps.Marker({",
                    "                        position: x,",
                    "                        animation: google.maps.Animation.DROP,",
                    "                        draggable: false,",
                    "                        title: record.data.street,",
                    "                        icon: iconBase + 'bus.png'",
                    "                    });",
                    "",
                    "                                (function(i, marker) {",
                    "                                    // Creating the event listener. It now has access to the values of",
                    "                                    // i and marker as they were during its creation",
                    "                                    google.maps.event.addListener(marker, 'click', function() {",
                    "                                        var infowindow = new google.maps.InfoWindow({",
                    "                                            content: ''+ marker.getTitle()//new google.maps.LatLng(block3[0],block3[1])",
                    "                                        });",
                    "                                        infowindow.open(map, marker);",
                    "                                    });",
                    "                                    })(i, marker);",
                    "",
                    "                    marker.setMap(map);",
                    "",
                    "                });",
                    "",
                    "                // shows the stops for Middle School South Route",
                    "                midSouth.each(function(record,index,length) {",
                    "",
                    "                    var x = new google.maps.LatLng(record.data.latitude, record.data.longitude);",
                    "",
                    "                    marker = new google.maps.Marker({",
                    "                        position: x,",
                    "                        animation: google.maps.Animation.DROP,",
                    "                        draggable: false,",
                    "                        title: record.data.street,",
                    "                        icon: iconBase + 'bus2.png'",
                    "                    });",
                    "",
                    "                                (function(i, marker) {",
                    "                                    // Creating the event listener. It now has access to the values of",
                    "                                    // i and marker as they were during its creation",
                    "                                    google.maps.event.addListener(marker, 'click', function() {",
                    "                                        var infowindow = new google.maps.InfoWindow({",
                    "                                            content: ''+ marker.getTitle()//new google.maps.LatLng(block3[0],block3[1])",
                    "                                        });",
                    "                                        infowindow.open(map, marker);",
                    "                                    });",
                    "                                    })(i, marker);",
                    "",
                    "                    marker.setMap(map);",
                    "",
                    "                });",
                    "",
                    "                // shows the stops for Middle School North Route",
                    "                midNorth.each(function(record,index,length) {",
                    "",
                    "                    var x = new google.maps.LatLng(record.data.latitude, record.data.longitude);",
                    "",
                    "                    marker = new google.maps.Marker({",
                    "                        position: x,",
                    "                        animation: google.maps.Animation.DROP,",
                    "                        draggable: false,",
                    "                        title: record.data.street,",
                    "                        icon: iconBase + 'bus2.png'",
                    "                    });",
                    "",
                    "                                (function(i, marker) {",
                    "                                    // Creating the event listener. It now has access to the values of",
                    "                                    // i and marker as they were during its creation",
                    "                                    google.maps.event.addListener(marker, 'click', function() {",
                    "                                        var infowindow = new google.maps.InfoWindow({",
                    "                                            content: ''+ marker.getTitle()",
                    "                                        });",
                    "                                        infowindow.open(map, marker);",
                    "                                    });",
                    "                                    })(i, marker);",
                    "",
                    "                    marker.setMap(map);",
                    "",
                    "                });",
                    "",
                    "",
                    "                // On each store record",
                    "                store.each(function(record, index, length) {",
                    "",
                    "                    // Get position",
                    "                                        var m = new google.maps.LatLng(record.data.lastLatitude, record.data.lastLongitude);",
                    "",
                    "                                // var allStops = [",
                    "                                //     [25.683558, -80.302937],[25.679579, -80.314014],[25.674111, -80.310723],",
                    "                                //     [25.672324, -80.309774],[25.670047, -80.310594],[25.669206, -80.314628],[25.673928, -80.317830],",
                    "                                //     [25.668423, -80.318685],[25.666770, -80.311508],[25.659658, -80.303406],[25.657376, -80.318258],",
                    "                                //     [25.655606, -80.314575],[25.651925, -80.313009],[25.654467, -80.318168],[25.655188, -80.327312],",
                    "                                //     [25.651581, -80.324233],[25.651474, -80.327800],[25.651408, -80.329799],[25.643997, -80.330056],",
                    "                                //     [25.644072, -80.325969],[25.644183, -80.321865],[25.645683, -80.321900],[25.644609, -80.307684],",
                    "                                //     [25.647133, -80.305715],[25.649387, -80.301740],[25.650818, -80.305817],[25.655838, -80.306032],",
                    "                                //     [25.647511, -80.293629],[25.653779, -80.290729],[25.655539, -80.290804],[25.647486, -80.293639],",
                    "                                //     [25.650833, -80.305817],[25.646519, -80.305731],[25.647196, -80.317854],[25.645668, -80.321910],",
                    "                                //     [25.645117, -80.326008],[25.645914, -80.326047],[25.644013, -80.330060],[25.647717, -80.329019],",
                    "                                //     [25.648631, -80.330221],[25.649666, -80.327764],[25.651407, -80.329754],[25.651460, -80.327796],",
                    "                                //     [25.655198, -80.327260],[25.655377, -80.322298],[25.661114, -80.316250],[25.659031, -80.325006],",
                    "                                //     [25.662501, -80.323666],[25.665944, -80.322421],[25.668420, -80.318673],[25.671978, -80.318802],",
                    "                                //     [25.673951, -80.317826],[25.669190, -80.314601],[25.672333, -80.309795],[25.679566, -80.314011],",
                    "                                //     [25.681500, -80.311029],[25.667100, -80.298287],[25.659692, -80.300003],[25.659650, -80.303408]",
                    "                                //     ];",
                    "",
                    "",
                    "                    // for(var r = 0; r < allStops.length; r++){",
                    "                    //     var stops = allStops[r];",
                    "",
                    "                        //var estimatedTime = find_estimated_distance( record.data.lastLatitude, record.data.lastLongitude, stops[0], stops[1] );",
                    "",
                    "                       // var m = new google.maps.LatLng(record.data.lastLatitude, record.data.lastLongitude)",
                    "",
                    "                    // Create marker",
                    "                    marker = new google.maps.Marker({",
                    "                        position: m,",
                    "                        animation: google.maps.Animation.DROP,",
                    "                        draggable: true,",
                    "                        icon: iconBase + 'logo_icon.png',",
                    "                        title: record.data.unitID",
                    "                    });",
                    "",
                    "                marker.setMap(map);",
                    "",
                    "                trolleys.push(marker);",
                    "",
                    "                for( i = 0; i < trolleys.length; i++)",
                    "                {",
                    "                    var contentString = 'Trolley ID: ' + record.data.unitID + '<br/>Location: ' + record.data.address;",
                    "",
                    "",
                    "                    var infowindow = new google.maps.InfoWindow({",
                    "                          content: contentString",
                    "                      });",
                    "",
                    "                    google.maps.event.addListener(marker, 'click', function() {",
                    "                        infowindow.open(map,this);",
                    "                      });",
                    "                }",
                    "                   setInterval(function() {",
                    "",
                    "                 for( i = 0; i < trolleys.length; i++)",
                    "                 {",
                    "                    trolleys[i].setMap(null);",
                    "                 }",
                    "                 trolleys = [];",
                    "",
                    "             }, 9000);",
                    "",
                    "                });",
                    "",
                    "   ",
                    ""
                ],
                "name": "maprender"
            },
            "name": "onMymapMaprender",
            "designerId": "01c78f90-4508-4ae3-ae12-1eb3dade447f"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "",
                    "        var autocallFunction = function() {",
                    "        var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "        var store, latLng, marker;",
                    "        var iconBase = 'resources/images/';",
                    "        var map = Ext.getCmp('mymap').getMap();",
                    "                // Get store",
                    "                store = Ext.getStore('MapStore');",
                    "                store.load();",
                    "                // On each store record",
                    "                var trolley = [];",
                    "                store.each(function(record, index, length) {",
                    "",
                    "                    // Get position",
                    "                    var m = new google.maps.LatLng(record.data.lastLatitude, record.data.lastLongitude);",
                    "",
                    "",
                    "                        //var m = new google.maps.LatLng(record.data.lastLatitude, record.data.lastLongitude)",
                    "",
                    "",
                    "                    // Create marker",
                    "                    marker = new google.maps.Marker({",
                    "                        position: m,",
                    "                        title: record.data.unitID,",
                    "                        draggable: true,",
                    "",
                    "                        icon: iconBase + 'logo_icon.png'",
                    "                    });",
                    "",
                    "                    trolley.push(marker);",
                    "",
                    "                 setInterval(function() {",
                    "",
                    "                 for( i = 0; i < trolley.length; i++)",
                    "                 {",
                    "                    trolley[i].setMap(null);",
                    "                 }",
                    "",
                    "       ",
                    "             }, 10000);",
                    "",
                    "                     marker.setMap(map);",
                    "                     position = m;",
                    "                     marker.setPosition(position);",
                    "",
                    "                    for( j = 0; j < trolley.length; j++)",
                    "                {",
                    "                    var contentString = 'Trolley ID: ' + record.data.unitID + '<br/>Location: ' + record.data.address;",
                    "                    //console.log(record.data.address);",
                    "                    var infowindow = new google.maps.InfoWindow({",
                    "                          content: contentString",
                    "                      });",
                    "",
                    "                    google.maps.event.addListener(marker, 'click', function() {",
                    "                        infowindow.open(map,this);",
                    "                      });",
                    "                }",
                    "",
                    "                });",
                    "",
                    "                        autocallFunction.call(this);",
                    "                    }, this);",
                    "",
                    "                    task.delay(10000);",
                    "                };",
                    "                autocallFunction();"
                ]
            },
            "name": "launch",
            "designerId": "f51a8013-9083-4659-8283-9d59f523a720"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "lat1",
                    "lon1",
                    "lat2",
                    "lon2"
                ],
                "fn": "find_estimated_distance",
                "implHandler": [
                    " var R = 6371; // Radius of the earth in km",
                    "  var dLat = deg2rad(lat2-lat1);  // deg2rad below",
                    "  var dLon = deg2rad(lon2-lon1); ",
                    "  var a = ",
                    "    Math.sin(dLat/2) * Math.sin(dLat/2) +",
                    "    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * ",
                    "    Math.sin(dLon/2) * Math.sin(dLon/2)",
                    "    ; ",
                    "  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); ",
                    "  var d = R * c; // Distance in km",
                    "",
                    "  //console.log('the caluclatd distance is ' + d);",
                    "  return d;  "
                ]
            },
            "name": "find_estimated_distance",
            "designerId": "364930de-7a14-4ec4-a7f7-99549933d8d4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "deg"
                ],
                "fn": "deg2rad",
                "implHandler": [
                    "return deg * (Math.PI/180);"
                ]
            },
            "name": "deg2rad",
            "designerId": "c333b2d3-a6f7-45c3-a899-853189c3be80"
        }
    ]
}